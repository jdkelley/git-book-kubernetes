<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Setup a powerful Kubernetes client on My Kubernetes Book</title><link>https://k8s-book.vupti.me/setup-a-powerful-kubernetes-client/</link><description>Recent content in Setup a powerful Kubernetes client on My Kubernetes Book</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://k8s-book.vupti.me/setup-a-powerful-kubernetes-client/index.xml" rel="self" type="application/rss+xml"/><item><title>k9s</title><link>https://k8s-book.vupti.me/setup-a-powerful-kubernetes-client/k9s/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://k8s-book.vupti.me/setup-a-powerful-kubernetes-client/k9s/</guid><description>K9s is a terminal based UI to interact with your Kubernetes clusters. The aim of this project is to make it easier to navigate, observe and manage your deployed applications in the wild.
k9s # K9s continually watches Kubernetes for changes and offers subsequent commands to interact with your observed resources.
CLI installation # curl -L https://github.com/derailed/k9s/releases/download/v0.24.2/k9s_Linux_x86_64.tar.gz | tar -xz chmod +x k9s &amp;amp;&amp;amp; sudo mv ./k9s /usr/local/bin/k9s k9s version Skin # Apply a pre-defined skin to the output:</description></item><item><title>kubens &amp; kubectx</title><link>https://k8s-book.vupti.me/setup-a-powerful-kubernetes-client/kubens-and-kubectx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://k8s-book.vupti.me/setup-a-powerful-kubernetes-client/kubens-and-kubectx/</guid><description>kubens &amp;amp; kubectx # Thanks to @ahmetb: https://github.com/ahmetb/kubectx
kubectxis a utility to manage and switch between kubectl contexts. kubensis a utility to switch between Kubernetes namespaces. sudo git clone https://github.com/ahmetb/kubectx /opt/kubectx sudo ln -s /opt/kubectx/kubectx /usr/local/bin/kubectx sudo ln -s /opt/kubectx/kubens /usr/local/bin/kubens Then you can easly switch both context and namespace by:
kubectx # list contexts kubectx &amp;lt;name&amp;gt; # switch context kubens # list namespace kubens &amp;lt;name&amp;gt; # switch namespace</description></item><item><title>Octant</title><link>https://k8s-book.vupti.me/setup-a-powerful-kubernetes-client/octant/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://k8s-book.vupti.me/setup-a-powerful-kubernetes-client/octant/</guid><description>Octant is a tool for developers to understand how applications run on a Kubernetes cluster
Octant # It aims to be part of the developer&amp;rsquo;s toolkit for gaining insight and approaching complexity found in Kubernetes. Octant offers a combination of introspective tooling, cluster navigation, and object management along with a plugin system to further extend its capabilities.
Installation # curl -L https://github.com/vmware-tanzu/octant/releases/download/v0.16.3/octant_0.16.3_Linux-64bit.deb &amp;gt; /tmp/octant.deb dpkg -i /tmp/octant.</description></item><item><title>Argo cli</title><link>https://k8s-book.vupti.me/setup-a-powerful-kubernetes-client/argo-cli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://k8s-book.vupti.me/setup-a-powerful-kubernetes-client/argo-cli/</guid><description>If you need to use Argo from this client machine.
Argo cli # Please check version from this releases page.
curl -sL https://github.com/argoproj/argo/releases/download/latest/argo-linux-amd64.gz | gunzip &amp;gt; argo chmod +x argo &amp;amp;&amp;amp; sudo mv ./argo /usr/local/bin/argo argo version Configuration # # Argo namespace export ARGO_NAMESPACE=argo # Start port forwarding kubectl -n $ARGO_NAMESPACE port-forward deployment/argo-server 2746:2746 &amp;amp; # keep it running in bg; user the following command to get the job number: jobs # if needed: get it back in foreground: fg 1</description></item><item><title>OpenFaaS CLI</title><link>https://k8s-book.vupti.me/setup-a-powerful-kubernetes-client/openfaas-cli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://k8s-book.vupti.me/setup-a-powerful-kubernetes-client/openfaas-cli/</guid><description> If you need to use OpenFaaS from the client machine.
OpenFaaS CLI # One-liner:
# openfaas-cli curl -sSL https://cli.openfaas.com | sudo sh Configuration # # Set namespace export OS_NS=&amp;#34;openfaas&amp;#34; # Get password export OF_PASS=$(echo $(kubectl -n $OS_NS get secret basic-auth -o jsonpath=&amp;#34;{.data.basic-auth-password}&amp;#34; | base64 --decode)) echo $OF_PASS # Get URI echo &amp;#34;export OPENFAAS_URL=http://&amp;#34;$(kubectl -n $OS_NS describe pods $(kubectl -n $OS_NS get pods | grep &amp;#34;gateway-&amp;#34; | awk &amp;#39;{print $1}&amp;#39;) | grep &amp;#34;^Node:&amp;#34; | awk -F &amp;#34;/&amp;#34; &amp;#39;{print $2}&amp;#39;)&amp;#34;:31112&amp;#34; Login # echo $OF_PASS | faas-cli login --password-stdin</description></item></channel></rss>